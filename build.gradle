// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'org.robolectric:robolectric-gradle-plugin:1.0.1'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
    }
}
// This is a workaround to get working coverage reporting on the unit test builds.
// See https://github.com/serj-lotutovici/jacoco-example for example
subprojects { proj ->
    apply plugin: 'jacoco'

    jacoco {
        version "0.7.4.201502262128"
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        reports {
            xml.enabled = true
            html.enabled = true
        }
        classDirectories = fileTree(
                dir: 'build/intermediates/classes/debug',
                excludes: ['**/R.class',
                        '**/R$*.class ',
                           '**/BuildConfig*'])
        sourceDirectories = files('src/main/java')
        executionData = files('build/jacoco/testDebug.exec')
        doFirst {
            files('build/intermediates/classes/debug').getFiles().each { file ->
                if (file.name.contains('$$')) {
                    file.renameTo(file.path.replace('$$', '$'))
                }
            }
        }
    }
}

jacoco {
    toolVersion "0.7.4.201502262128"
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    group = "Reporting"
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(subprojects.jacocoTestReport)

    additionalSourceDirs = files('app/src/main/java') + files('resourceholder2/src/main/java')
    sourceDirectories = files('app/src/main/java') + files('resourceholder2/src/main/java')
    classDirectories = files('app/build/intermediates/classes/debug') + files('resourceholder2/build/intermediates/classes/debug')
    executionData = files(subprojects.jacocoTestReport.executionData)

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = files('app/src/main/java').flatten() + files('resourceholder2/src/main/java').flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    group = 'Coverage reports'
    description = 'Uploads the aggregated coverage report to Coveralls'

    dependsOn jacocoRootReport
    onlyIf { System.env.'CI' }
}
